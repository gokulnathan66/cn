#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/shm.h>
#include <string.h>
#include <unistd.h>

#define SHM_KEY 3000
#define MAX_ENTRIES 3
#define NAME_LENGTH 50
#define IP_LENGTH 16
#define SHM_SIZE (MAX_ENTRIES * (NAME_LENGTH + IP_LENGTH + 2)) // Name + IP + newline + space

int main() {
    int shmid, a, i;
    char *ptr, *shmptr;

    // Create a shared memory segment
    shmid = shmget(SHM_KEY, SHM_SIZE, IPC_CREAT | 0666);
    if (shmid < 0) {
        perror("shmget failed");
        exit(1);
    }

    // Attach the shared memory segment
    shmptr = shmat(shmid, NULL, 0);
    if (shmptr == (char *)(-1)) {
        perror("shmat failed");
        exit(1);
    }

    ptr = shmptr;

    // Collect entries
    for (i = 0; i < MAX_ENTRIES; i++) {
        puts("Enter the name:");
        scanf("%s", ptr);
        a = strlen(ptr);
        ptr[a] = ' '; // Add space after the name
        puts("Enter IP:");
        ptr = ptr + a + 1; // Move pointer to the next position
        scanf("%s", ptr);
        ptr[strlen(ptr)] = '\n'; // Add newline after the IP
        ptr += strlen(ptr) + 1; // Move pointer for the next entry
    }

    // Null terminate the string
    *ptr = '\0';

    // Print ARP table
    printf("\nARP table at server side is:\n%s", shmptr);

    // Detach the shared memory
    shmdt(shmptr);
    
    return 0;
}
